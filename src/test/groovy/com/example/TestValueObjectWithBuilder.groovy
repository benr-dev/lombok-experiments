/*
 * This Spock specification was generated by the Gradle 'init' task.
 */
package com.example

import spock.lang.Specification

import java.lang.reflect.Constructor
import java.lang.reflect.Method
import java.lang.reflect.Modifier

class TestValueObjectWithBuilder extends Specification {
    def "value object has only getter methods"() {
        setup:
        Class<ValueObject> clazz = Class.forName("com.example.ValueObjectWithBuilder")

        when:
        def builderParameterCount = 0

        for(Method m: clazz.methods) {
            if (m.getName().equals("of")) {
                builderParameterCount = m.getParameterCount()
                break
            }
        }

        then:
        assert builderParameterCount == 2
    }

    def "dto has public constructors"() {
        setup:
        def clazz = Class.forName("com.example.ValueObjectWithBuilder")

        expect: hasNoPublicConstructor(clazz)
    }

    boolean hasNoPublicConstructor(Class<?> aClass) {
        for(Constructor c : aClass.constructors) {
            if(Modifier.isPublic(c.modifiers) || Modifier.isProtected(c.modifiers)) return false
        }

        return true
    }
}
